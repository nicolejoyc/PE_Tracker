<!DOCTYPE html>
<html lang="en">
<head>
	<title>PE Tracker</title>
	<meta charset="UTF-8">
	<style>
		button {
			background-color: lightgrey;
			display: block;
			height: 3rem;
			margin-bottom: 1rem;
			font-weight: bold;
			width: 10rem;
		}
		#end {
			background-color: red;
			color: white;
			margin-top: 3.6rem;
		}
		h2 {
			border-bottom: 1px solid black;
		}
		h1, h2 {
			margin: 0;
		}
		#sectionStudentInfo {
			float: left;
			width: auto;
		}
		#sectionBehaviors {
			float: left;
			margin-right: 5%;
		}
		label {
			display: block;
		}
	</style>
</head>
<body>

	<header>
		<h1>UW-L Modified P.E. Tracker</h1>
		<h2>Physical Education Teacher Assessment Instrument</h2>
	</header>

	<main>
		<section id="sectionBehaviors">
			<h3>Teacher Behavior</h3>
			<% tasks.forEach(function(r) {%>
				<button id='<%= r.id %>'
					onClick='javascript:logTask(<%= r.id %>);'><%= r.name %>
				</button>
			<% }); %>
		</section>
		
		<section id="sectionStudentInfo">
			<h3>Student/Instructor Information</h3>
			<label for="studentName">Student's Name</label>
			<input type="text" id="studentName">
			<br><br>
			<label for="school">School Name</label>
			<input type="text" id="school">

			<button id="end" onClick="javascript:endTracking()">End Tracking</button>
		</section>
	</main>

	<script>
let currentTaskId = null;
let timeStampStart = null;
let timeStampEnd = null;
let timeElapsed = null;

const endTask = async function(id) {
	let studentName = document.getElementById("studentName").value;
	let school = document.getElementById("school").value;

	timeStampEnd = new Date();
	timeElapsed = Math.abs(timeStampEnd - timeStampStart);

	// ensures correct formatting
	function padTo2Digits(num) {
		return num.toString().padStart(2, '0');
	}

	// function for timeElapsed to be converted to correct format
	function convertMsToTime(milliseconds) {
		let seconds = Math.floor(milliseconds / 1000);
		let minutes = Math.floor(seconds / 60);
		let hours = Math.floor(minutes / 60);

		seconds = seconds % 60;
		minutes = minutes % 60;
		hours = hours % 24;

		return `${padTo2Digits(hours)}:${padTo2Digits(minutes)}:${padTo2Digits(
			seconds,
		)}`;
	}

	// send info to be stored (automatically) into the database
	const response = await fetch('/log', {
		method: 'POST',
		headers: {
			'Accept': 'application/json',
			'Content-Type': 'application/json'
		},
		body: JSON.stringify({
			students_name: "'" + studentName + "'",
			school: "'" + school + "'",
			tasks_id: id,
			duration: "'" + convertMsToTime(timeElapsed) + "'"
		})
	});
	const result = await response.json();


	// update timeStampStart variable to hold current timeStamp
	timeStampStart = timeStampEnd;
}

const logTask = async function(id) {

	// validate student info fields before anything else
	if (document.getElementById("studentName").value === "" || document.getElementById("school").value === "") {
		alert("Please fill out the student information before proceeding.");
	} else {

		// set button color of current task to yellow
		// and all others to default
		currentTask = document.getElementById(id);
		currentTask.style.backgroundColor = 'yellow';
		for (let i = 1; i <= 10; i++) {
			if (i !== id) {
				document.getElementById(i).style.backgroundColor = 'lightgrey';
			}
		}

		// check if this is ending another task
		if (timeStampStart === null) {
			timeStampStart = new Date();
		} else { // if it is, add previous task to db
			endTask(currentTaskId);
		}
		
		// update the currentTaskId
		currentTaskId = id;
	}

};

// click handler for end tracking button
const endTracking = async function() {

	if (document.getElementById("studentName").value !== "" && document.getElementById("school").value !== "") {

		// as long as a behavior is being tracked, track the final behavior
		// and set all the buttons back to grey
		if (timeStampStart !== null) {
			
			// call endTask for the task to be automatically added to the db
			endTask(currentTaskId);
			for (let i = 1; i <= 10; i++) {
				document.getElementById(i).style.backgroundColor = 'lightgrey';
			}
		} else {
			alert("You have not begun a tracking session yet.")
		}
	} else {
		alert("Please fill out the student information before proceeding.");
	}

};
	</script>
</body>
</html>